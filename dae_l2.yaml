!obj:pylearn2.train.Train {
    "dataset": &train !obj:pylearn2.datasets.transformer_dataset.TransformerDataset {
        "raw": !pkl: "${PYLEARN2_DATA_PATH}/vanhateren/train.pkl",
        "transformer": !pkl: "sparserf_example.pkl"
    },
    "model": !obj:pylearn2.models.autoencoder.DenoisingAutoencoder {
        "nvis" : 1024,
        "nhid" : 1024,
        "irange" : 0.05,
        "corruptor": !obj:pylearn2.corruption.BinomialCorruptor {
            "corruption_level": .3,
        },
        "act_enc": "tanh",
        "act_dec": null,    # Linear activation on the decoder side.
    },
    "algorithm": !obj:pylearn2.training_algorithms.sgd.SGD {
        "learning_rate" : 1e-3,
        "batch_size" : 25,
#        "monitoring_batches" : %(monitoring_batches)i,
        "monitoring_dataset" :
            {
                'test'  : !pkl: "${PYLEARN2_DATA_PATH}/vanhateren/test.pkl",
                'valid' : !pkl: "${PYLEARN2_DATA_PATH}/vanhateren/valid.pkl",
            },
        "cost" : !obj:pylearn2.costs.autoencoder.MeanSquaredReconstructionError {},
        "termination_criterion" : !obj:pylearn2.termination_criteria.EpochCounter {
            "max_epochs" : 100,
        },
    },
    "save_path": "dae_l2.pkl",
    "save_freq": 100
}
